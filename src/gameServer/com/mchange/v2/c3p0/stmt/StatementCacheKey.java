/*     */ package com.mchange.v2.c3p0.stmt;
/*     */ 
/*     */ import com.mchange.v1.util.ArrayUtils;
/*     */ import com.mchange.v2.lang.ObjectUtils;
/*     */ import java.lang.reflect.Method;
/*     */ import java.sql.Connection;
/*     */ import java.util.Arrays;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ abstract class StatementCacheKey
/*     */ {
/*     */   static final int SIMPLE = 0;
/*     */   static final int MEMORY_COALESCED = 1;
/*     */   static final int VALUE_IDENTITY = 2;
/*     */   Connection physicalConnection;
/*     */   String stmtText;
/*     */   boolean is_callable;
/*     */   int result_set_type;
/*     */   int result_set_concurrency;
/*     */   int[] columnIndexes;
/*     */   String[] columnNames;
/*     */   Integer autogeneratedKeys;
/*     */   Integer resultSetHoldability;
/*     */   
/*     */   public static synchronized StatementCacheKey find(Connection pcon, Method stmtProducingMethod, Object[] args) {
/*  53 */     switch (2) {
/*     */       
/*     */       case 0:
/*  56 */         return SimpleStatementCacheKey._find(pcon, stmtProducingMethod, args);
/*     */       case 1:
/*  58 */         return MemoryCoalescedStatementCacheKey._find(pcon, stmtProducingMethod, args);
/*     */       case 2:
/*  60 */         return ValueIdentityStatementCacheKey._find(pcon, stmtProducingMethod, args);
/*     */     } 
/*  62 */     throw new InternalError("StatementCacheKey.find() is misconfigured.");
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   StatementCacheKey() {}
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   StatementCacheKey(Connection physicalConnection, String stmtText, boolean is_callable, int result_set_type, int result_set_concurrency, int[] columnIndexes, String[] columnNames, Integer autogeneratedKeys, Integer resultSetHoldability) {
/*  98 */     init(physicalConnection, stmtText, is_callable, result_set_type, result_set_concurrency, columnIndexes, columnNames, autogeneratedKeys, resultSetHoldability);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   void init(Connection physicalConnection, String stmtText, boolean is_callable, int result_set_type, int result_set_concurrency, int[] columnIndexes, String[] columnNames, Integer autogeneratedKeys, Integer resultSetHoldability) {
/* 120 */     this.physicalConnection = physicalConnection;
/* 121 */     this.stmtText = stmtText;
/* 122 */     this.is_callable = is_callable;
/* 123 */     this.result_set_type = result_set_type;
/* 124 */     this.result_set_concurrency = result_set_concurrency;
/* 125 */     this.columnIndexes = columnIndexes;
/* 126 */     this.columnNames = columnNames;
/* 127 */     this.autogeneratedKeys = autogeneratedKeys;
/* 128 */     this.resultSetHoldability = resultSetHoldability;
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   static boolean equals(StatementCacheKey _this, Object o) {
/* 135 */     if (_this == o)
/* 136 */       return true; 
/* 137 */     if (o instanceof StatementCacheKey) {
/*     */       
/* 139 */       StatementCacheKey sck = (StatementCacheKey)o;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */       
/* 145 */       return (sck.physicalConnection.equals(_this.physicalConnection) && sck.stmtText.equals(_this.stmtText) && sck.is_callable == _this.is_callable && sck.result_set_type == _this.result_set_type && sck.result_set_concurrency == _this.result_set_concurrency && Arrays.equals(sck.columnIndexes, _this.columnIndexes) && Arrays.equals((Object[])sck.columnNames, (Object[])_this.columnNames) && ObjectUtils.eqOrBothNull(sck.autogeneratedKeys, _this.autogeneratedKeys) && ObjectUtils.eqOrBothNull(sck.resultSetHoldability, _this.resultSetHoldability));
/*     */     } 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */     
/* 157 */     return false;
/*     */   }
/*     */ 
/*     */   
/*     */   static int hashCode(StatementCacheKey _this) {
/* 162 */     return _this.physicalConnection.hashCode() ^ _this.stmtText.hashCode() ^ (_this.is_callable ? 1 : 0) ^ _this.result_set_type ^ _this.result_set_concurrency ^ ArrayUtils.hashOrZeroArray(_this.columnIndexes) ^ ArrayUtils.hashOrZeroArray((Object[])_this.columnNames) ^ ObjectUtils.hashOrZero(_this.autogeneratedKeys) ^ ObjectUtils.hashOrZero(_this.resultSetHoldability);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public String toString() {
/* 176 */     StringBuffer out = new StringBuffer(128);
/* 177 */     out.append("[" + getClass().getName() + ": ");
/* 178 */     out.append("physicalConnection->" + this.physicalConnection);
/* 179 */     out.append(", stmtText->" + this.stmtText);
/* 180 */     out.append(", is_callable->" + this.is_callable);
/* 181 */     out.append(", result_set_type->" + this.result_set_type);
/* 182 */     out.append(", result_set_concurrency->" + this.result_set_concurrency);
/* 183 */     out.append(", columnIndexes->" + ArrayUtils.toString(this.columnIndexes));
/* 184 */     out.append(", columnNames->" + ArrayUtils.toString((Object[])this.columnNames));
/* 185 */     out.append(", autogeneratedKeys->" + this.autogeneratedKeys);
/* 186 */     out.append(", resultSetHoldability->" + this.resultSetHoldability);
/* 187 */     out.append(']');
/* 188 */     return out.toString();
/*     */   }
/*     */ }


/* Location:              /Users/bacnam/Projects/TieuLongProject/gameserver/gameServer.jar!/com/mchange/v2/c3p0/stmt/StatementCacheKey.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */